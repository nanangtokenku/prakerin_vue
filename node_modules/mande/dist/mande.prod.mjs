/*!
  * mande v2.0.2
  * (c) 2022 Eduardo San Martin Morote
  * @license MIT
  */
let e=/^\/+/;const t={responseAs:"json",headers:{Accept:"application/json","Content-Type":"application/json"}};function n(n,o={},r){function s(o,r,s,c={}){let i,a;"object"==typeof r?(i="",a=r,c=s||{}):(i=r,a=s);let p={...t,...u,method:o,...c,headers:(d={...t.headers,...u.headers,...c.headers},Object.keys(d).reduce(((e,t)=>(null!=d[t]&&(e[t]=d[t]),e)),{}))};var d;let f={...t.query,...u.query,...c.query},{responseAs:h}=p;return i=function(t,n){return t+(n&&(t.endsWith("/")?n.replace(e,""):n.startsWith("/")?n:"/"+n))}(n,"number"==typeof i?""+i:i||""),i+=function(e){let t=Object.keys(e).map((t=>[t,e[t]].map(encodeURIComponent).join("="))).join("&");return t?"?"+t:""}(f),a&&(p.body=JSON.stringify(a)),l(i,p).then((e=>Promise.all([e,"response"===h?e:e[h]().catch((()=>null))]))).then((([e,t])=>{if(e.status>=200&&e.status<300)return"response"!==h&&204==e.status?null:t;let n=new Error(e.statusText);throw n.response=e,n.body=t,n}))}const l="undefined"!=typeof fetch?fetch:r;if(!l)throw new Error("No fetch function exists. Make sure to include a polyfill on Node.js.");const u={query:{},headers:{},...o};return{options:u,post:s.bind(null,"POST"),put:s.bind(null,"PUT"),patch:s.bind(null,"PATCH"),get:(e,t)=>s("GET",e,null,t),delete:(e,t)=>s("DELETE",e,null,t)}}function o(e,t){const n=t.length;return function(){let o=e,r=Array.from(arguments);if(arguments.length===n){o={...e};const[t]=r.splice(0,1);t(o)}return t.call(null,o,...r)}}export{t as defaults,n as mande,o as nuxtWrap};
